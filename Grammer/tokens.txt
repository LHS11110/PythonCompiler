PEQUAL          \+=
MEQUAL          \-=
MULEQUAL        \*=
DIVEQUAL        /=
MODULEQUAL      %=
PLUS            \+
MINUS           \-
DMULTIPLY       \*\*
MULTIPLY        \*
FLOORDIV        //
DIVIDE          /
PASS            pass|\.\.\.
NOT             not
DEQUAL          ==
NEQUAL          !=
EQUAL           =
MODULO          %
LEQUAL          <=
GEQUAL          >=
LBITSHIFT       <<
LESS            <
RBITSHIFT       >>
GREATER         >
RARROW          \->
AND             and
OR              or
DOT             \.
COMMA           ,
LSQB            \[
RSQB            \]
LBRACE          \{
RBRACE          \}
LPAREN          \(
RPAREN          \)
BITAND          &
BITOR           \|
BITXOR          \^
EOL             \n
INDENT          [ ]{4}
SPACE           [ ]{1,3}
BSLASH          \\
IF              if
ELIF            elif
ELSE            else
FOR             for
IN              in
NOTIN           not in
IS              is
ISNOT           is not
WHILE           while
RETURN          return
CONTINUE        continue
RAISE           raise
YIELD           yield
DEF             def
BOOL            False|True
COLON           :
NUMBER          \d+(\.{1}\d+)?
STRING          ("{3}[^"{3}]*"{3})|("(\\"|[^"\n])*")|('(\\'|[^'\n])*')
PIPE            \|>
STRUCT          struct
IMPORT          import
CLASS           class
BTYPE           byte|word|dword|qword
NONE            None
STATIC          static
IDENTIFIER      [a-zA-Z_]+[a-zA-Z0-9_]*